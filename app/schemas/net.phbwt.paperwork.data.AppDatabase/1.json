{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "1afcf8b518ede8e61a73f72b783ce03f",
    "entities": [
      {
        "tableName": "Document",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`documentId` INTEGER NOT NULL, `name` TEXT NOT NULL, `title` TEXT, `thumb` TEXT, `pageCount` INTEGER NOT NULL, `date` INTEGER NOT NULL, `mtime` INTEGER NOT NULL, `size` INTEGER NOT NULL, PRIMARY KEY(`documentId`))",
        "fields": [
          {
            "fieldPath": "documentId",
            "columnName": "documentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumb",
            "columnName": "thumb",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pageCount",
            "columnName": "pageCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mtime",
            "columnName": "mtime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "documentId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Part",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`partId` INTEGER NOT NULL, `documentId` INTEGER NOT NULL, `name` TEXT NOT NULL, `downloadStatus` INTEGER NOT NULL, `downloadError` TEXT, PRIMARY KEY(`partId`), FOREIGN KEY(`documentId`) REFERENCES `Document`(`documentId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "partId",
            "columnName": "partId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "documentId",
            "columnName": "documentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "downloadStatus",
            "columnName": "downloadStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "downloadError",
            "columnName": "downloadError",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "partId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "Part_documentId",
            "unique": false,
            "columnNames": [
              "documentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `Part_documentId` ON `${TABLE_NAME}` (`documentId`)"
          },
          {
            "name": "Part_downloadStatus",
            "unique": false,
            "columnNames": [
              "downloadStatus"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `Part_downloadStatus` ON `${TABLE_NAME}` (`downloadStatus`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Document",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "documentId"
            ],
            "referencedColumns": [
              "documentId"
            ]
          }
        ]
      },
      {
        "tableName": "Label",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`labelId` INTEGER NOT NULL, `documentId` INTEGER NOT NULL, `name` TEXT NOT NULL, `color` TEXT, PRIMARY KEY(`labelId`), FOREIGN KEY(`documentId`) REFERENCES `Document`(`documentId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "labelId",
            "columnName": "labelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "documentId",
            "columnName": "documentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "labelId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "Label_documentId",
            "unique": false,
            "columnNames": [
              "documentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `Label_documentId` ON `${TABLE_NAME}` (`documentId`)"
          },
          {
            "name": "Label_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `Label_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Document",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "documentId"
            ],
            "referencedColumns": [
              "documentId"
            ]
          }
        ]
      },
      {
        "tableName": "DocumentText",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`documentId` INTEGER NOT NULL, `main` TEXT NOT NULL, `additional` TEXT, PRIMARY KEY(`documentId`), FOREIGN KEY(`documentId`) REFERENCES `Document`(`documentId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "documentId",
            "columnName": "documentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "main",
            "columnName": "main",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "additional",
            "columnName": "additional",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "documentId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Document",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "documentId"
            ],
            "referencedColumns": [
              "documentId"
            ]
          }
        ]
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "unicode61",
          "tokenizerArgs": [],
          "contentTable": "DocumentText",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_DocumentFts_BEFORE_UPDATE BEFORE UPDATE ON `DocumentText` BEGIN DELETE FROM `DocumentFts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_DocumentFts_BEFORE_DELETE BEFORE DELETE ON `DocumentText` BEGIN DELETE FROM `DocumentFts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_DocumentFts_AFTER_UPDATE AFTER UPDATE ON `DocumentText` BEGIN INSERT INTO `DocumentFts`(`docid`, `main`, `additional`) VALUES (NEW.`rowid`, NEW.`main`, NEW.`additional`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_DocumentFts_AFTER_INSERT AFTER INSERT ON `DocumentText` BEGIN INSERT INTO `DocumentFts`(`docid`, `main`, `additional`) VALUES (NEW.`rowid`, NEW.`main`, NEW.`additional`); END"
        ],
        "tableName": "DocumentFts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`main` TEXT NOT NULL, `additional` TEXT, tokenize=unicode61, content=`DocumentText`)",
        "fields": [
          {
            "fieldPath": "main",
            "columnName": "main",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "additional",
            "columnName": "additional",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "rowid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '1afcf8b518ede8e61a73f72b783ce03f')"
    ]
  }
}